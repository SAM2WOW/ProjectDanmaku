[gd_resource type="VisualShader" load_steps=11 format=2]

[ext_resource path="res://arts/shaders/Laser.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeVectorCompose" id=8]

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 200.0 ]
operator = 2

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Input:10
	vec3 n_out10p0 = COLOR.rgb;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// ScalarOp:9
	float n_in9p1 = 200.00000;
	float n_out9p0 = n_out4p0 * n_in9p1;

// Input:6
	float n_out6p0 = TIME;

// ScalarOp:7
	float n_in7p1 = -1.00000;
	float n_out7p0 = n_out6p0 * n_in7p1;

// ScalarOp:8
	float n_out8p0 = n_out9p0 + n_out7p0;

// VectorCompose:5
	float n_in5p2 = 0.00000;
	vec3 n_out5p0 = vec3(n_out8p0, n_out4p1, n_in5p2);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out5p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	COLOR.rgb = n_out10p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -580.199, 5.75764 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -20, 100 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -1260, 180 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( -1080, 180 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( -300, 180 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( -900, 400 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( -680, 380 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( -500, 300 )
nodes/fragment/9/node = SubResource( 14 )
nodes/fragment/9/position = Vector2( -760, 140 )
nodes/fragment/10/node = SubResource( 15 )
nodes/fragment/10/position = Vector2( 160, 40 )
nodes/fragment/connections = PoolIntArray( 2, 1, 0, 1, 3, 0, 4, 0, 5, 0, 2, 0, 6, 0, 7, 0, 7, 0, 8, 1, 4, 0, 9, 0, 9, 0, 8, 0, 4, 1, 5, 1, 8, 0, 5, 0, 10, 0, 0, 0 )
