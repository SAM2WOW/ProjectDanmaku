[gd_resource type="ShaderMaterial" load_steps=41 format=2]

[ext_resource path="res://arts/collage/Moon Sprite Sheet.jpg" type="Texture" id=1]
[ext_resource path="res://arts/collage/backbar.png" type="Texture" id=2]
[ext_resource path="res://arts/particles/whitecircle.png" type="Texture" id=3]
[ext_resource path="res://arts/collage/Collage_Background_Background.png" type="Texture" id=4]
[ext_resource path="res://arts/collage/Collage_Background_Front_Layer.png" type="Texture" id=5]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 6.0 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 1.0, 1, 6.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "Speed"
default_value_enabled = true
default_value = 4.0

[sub_resource type="VisualShaderNodeScalarConstant" id=17]
constant = 29.0

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.22 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 1.77 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=22]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=25]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=26]
texture = ExtResource( 5 )

[sub_resource type="VisualShaderNodeVectorOp" id=27]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=28]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=30]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=31]

[sub_resource type="VisualShaderNodeVectorCompose" id=32]

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
function = 31

[sub_resource type="VisualShaderNodeColorOp" id=34]
operator = 4

[sub_resource type="VisualShaderNodeVectorOp" id=35]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=36]
function = 31

[sub_resource type="VisualShaderNodeColorConstant" id=37]
constant = Color( 0.0554468, 0.103181, 0.135095, 1 )

[sub_resource type="VisualShaderNodeVectorFunc" id=3]
function = 34

[sub_resource type="VisualShaderNodeVectorOp" id=38]

[sub_resource type="VisualShaderNodeTextureUniform" id=39]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeVectorCompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 6.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=14]

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[sub_resource type="VisualShader" id=40]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_20;
uniform float Speed = 4;
uniform sampler2D tex_frg_17;
uniform sampler2D tex_frg_26;
uniform sampler2D tex_frg_27;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:22
	vec3 n_out22p0 = vec3(SCREEN_UV, 0.0);

// Texture:20
	vec4 tex_frg_20_read = texture(tex_frg_20, n_out22p0.xy);
	vec3 n_out20p0 = tex_frg_20_read.rgb;
	float n_out20p1 = tex_frg_20_read.a;

// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// VectorFunc:4
	vec3 n_out4p0 = vec3(1.0, 1.0, 1.0) - n_out3p0;

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarOp:18
	float n_in18p1 = 0.22000;
	float n_out18p0 = n_out5p0 - n_in18p1;

// ScalarOp:19
	float n_in19p1 = 1.77000;
	float n_out19p0 = n_out18p0 * n_in19p1;

// Scalar:16
	float n_out16p0 = 29.000000;

// ScalarOp:7
	float n_out7p0 = n_out19p0 / n_out16p0;

// Input:9
	float n_out9p0 = TIME;

// ScalarUniform:15
	float n_out15p0 = Speed;

// ScalarOp:14
	float n_out14p0 = n_out9p0 * n_out15p0;

// ScalarFunc:13
	float n_out13p0 = floor(n_out14p0);

// ScalarOp:10
	float n_out10p0 = mod(n_out13p0, n_out16p0);

// ScalarOp:12
	float n_in12p0 = 1.00000;
	float n_out12p0 = n_in12p0 / n_out16p0;

// ScalarOp:11
	float n_out11p0 = n_out10p0 * n_out12p0;

// ScalarOp:8
	float n_out8p0 = n_out7p0 + n_out11p0;

// VectorCompose:6
	vec3 n_out6p0 = vec3(n_out8p0, n_out5p1, n_out5p2);

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, n_out6p0.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// VectorOp:21
	vec3 n_out21p0 = n_out20p0 * n_out17p0;

// Input:31
	vec3 n_out31p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:32
	float n_out32p0 = n_out31p0.x;
	float n_out32p1 = n_out31p0.y;
	float n_out32p2 = n_out31p0.z;

// ScalarFunc:34
	float n_out34p0 = 1.0 - n_out32p1;

// VectorCompose:33
	float n_in33p2 = 0.00000;
	vec3 n_out33p0 = vec3(n_out32p0, n_out34p0, n_in33p2);

// Texture:26
	vec4 tex_frg_26_read = texture(tex_frg_26, n_out33p0.xy);
	vec3 n_out26p0 = tex_frg_26_read.rgb;
	float n_out26p1 = tex_frg_26_read.a;

// VectorOp:28
	vec3 n_out28p0 = n_out21p0 + n_out26p0;

// Texture:27
	vec4 tex_frg_27_read = texture(tex_frg_27, n_out6p0.xy);
	vec3 n_out27p0 = tex_frg_27_read.rgb;
	float n_out27p1 = tex_frg_27_read.a;

// VectorOp:29
	vec3 n_out29p0 = n_out27p0 * vec3(n_out27p1);

// ColorOp:35
	vec3 n_out35p0;
	{
		float base = n_out28p0.x;
		float blend = n_out29p0.x;
		if (base < 0.5) {
			n_out35p0.x = 2.0 * base * blend;
		} else {
			n_out35p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out28p0.y;
		float blend = n_out29p0.y;
		if (base < 0.5) {
			n_out35p0.y = 2.0 * base * blend;
		} else {
			n_out35p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out28p0.z;
		float blend = n_out29p0.z;
		if (base < 0.5) {
			n_out35p0.z = 2.0 * base * blend;
		} else {
			n_out35p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// Color:39
	vec3 n_out39p0 = vec3(0.055447, 0.103181, 0.135095);
	float n_out39p1 = 1.000000;

// VectorOp:40
	vec3 n_out40p0 = n_out35p0 + n_out39p0;

// TextureUniform:41
	vec3 n_out41p0;
	float n_out41p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out41p0 = n_tex_read.rgb;
		n_out41p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out40p0;
	COLOR.a = n_out41p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -375.906, 128.602 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1740, 300 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -1920, 180 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -1620, 180 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -1280, 180 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -140, 180 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -720, 60 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -440, 60 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( -1600, -180 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( -900, -200 )
nodes/fragment/11/node = SubResource( 9 )
nodes/fragment/11/position = Vector2( -660, -180 )
nodes/fragment/12/node = SubResource( 10 )
nodes/fragment/12/position = Vector2( -900, -80 )
nodes/fragment/13/node = SubResource( 11 )
nodes/fragment/13/position = Vector2( -1200, -180 )
nodes/fragment/14/node = SubResource( 12 )
nodes/fragment/14/position = Vector2( -1380, -200 )
nodes/fragment/15/node = SubResource( 13 )
nodes/fragment/15/position = Vector2( -1680, -80 )
nodes/fragment/16/node = SubResource( 17 )
nodes/fragment/16/position = Vector2( -1240, -40 )
nodes/fragment/17/node = SubResource( 19 )
nodes/fragment/17/position = Vector2( 160, 120 )
nodes/fragment/18/node = SubResource( 20 )
nodes/fragment/18/position = Vector2( -1020, 340 )
nodes/fragment/19/node = SubResource( 21 )
nodes/fragment/19/position = Vector2( -840, 340 )
nodes/fragment/20/node = SubResource( 22 )
nodes/fragment/20/position = Vector2( 120, -120 )
nodes/fragment/21/node = SubResource( 23 )
nodes/fragment/21/position = Vector2( 397.708, 74.3241 )
nodes/fragment/22/node = SubResource( 24 )
nodes/fragment/22/position = Vector2( -140, -60 )
nodes/fragment/26/node = SubResource( 25 )
nodes/fragment/26/position = Vector2( 140, 420 )
nodes/fragment/27/node = SubResource( 26 )
nodes/fragment/27/position = Vector2( 580, 500 )
nodes/fragment/28/node = SubResource( 27 )
nodes/fragment/28/position = Vector2( 620, 180 )
nodes/fragment/29/node = SubResource( 28 )
nodes/fragment/29/position = Vector2( 840, 600 )
nodes/fragment/31/node = SubResource( 30 )
nodes/fragment/31/position = Vector2( -840, 620 )
nodes/fragment/32/node = SubResource( 31 )
nodes/fragment/32/position = Vector2( -580, 640 )
nodes/fragment/33/node = SubResource( 32 )
nodes/fragment/33/position = Vector2( -160, 620 )
nodes/fragment/34/node = SubResource( 33 )
nodes/fragment/34/position = Vector2( -360, 700 )
nodes/fragment/35/node = SubResource( 34 )
nodes/fragment/35/position = Vector2( 1060, 260 )
nodes/fragment/36/node = SubResource( 35 )
nodes/fragment/36/position = Vector2( 380, 360 )
nodes/fragment/37/node = SubResource( 36 )
nodes/fragment/37/position = Vector2( 360, 260 )
nodes/fragment/39/node = SubResource( 37 )
nodes/fragment/39/position = Vector2( 1240, 420 )
nodes/fragment/40/node = SubResource( 38 )
nodes/fragment/40/position = Vector2( 1380, 280 )
nodes/fragment/41/node = SubResource( 39 )
nodes/fragment/41/position = Vector2( 1420, 460 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 5, 1, 6, 1, 5, 2, 6, 2, 7, 0, 8, 0, 12, 0, 11, 1, 11, 0, 8, 1, 10, 0, 11, 0, 13, 0, 10, 0, 9, 0, 14, 0, 14, 0, 13, 0, 15, 0, 14, 1, 16, 0, 12, 1, 16, 0, 10, 1, 16, 0, 7, 1, 6, 0, 17, 0, 8, 0, 6, 0, 18, 0, 19, 0, 5, 0, 18, 0, 19, 0, 7, 0, 20, 0, 21, 0, 17, 0, 21, 1, 22, 0, 20, 0, 21, 0, 28, 0, 27, 0, 29, 0, 27, 1, 29, 1, 31, 0, 32, 0, 32, 1, 34, 0, 33, 0, 26, 0, 34, 0, 33, 1, 32, 0, 33, 0, 28, 0, 35, 0, 29, 0, 35, 1, 17, 1, 37, 0, 37, 0, 36, 1, 26, 0, 36, 0, 26, 0, 28, 1, 35, 0, 40, 0, 39, 0, 40, 1, 40, 0, 0, 0, 41, 1, 0, 1, 6, 0, 27, 0 )

[resource]
shader = SubResource( 40 )
shader_param/Speed = 4.0
shader_param/TextureUniform = ExtResource( 3 )
