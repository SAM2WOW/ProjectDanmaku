[gd_resource type="ShaderMaterial" load_steps=25 format=2]

[ext_resource path="res://arts/collage/Moon Sprite Sheet.png" type="Texture" id=1]
[ext_resource path="res://arts/collage/backbar.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 6.0 ]
operator = 4

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 1.0, 1, 6.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 14

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "Speed"
default_value_enabled = true
default_value = 4.0

[sub_resource type="VisualShaderNodeScalarConstant" id=17]
constant = 29.0

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.25 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=21]
default_input_values = [ 0, 0.0, 1, 1.77 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=22]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=25]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeVectorFunc" id=3]
function = 34

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]

[sub_resource type="VisualShaderNodeVectorCompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 6.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=14]

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[sub_resource type="VisualShader" id=18]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_20;
uniform float Speed = 4;
uniform sampler2D tex_frg_17;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:22
	vec3 n_out22p0 = vec3(SCREEN_UV, 0.0);

// Texture:20
	vec4 tex_frg_20_read = texture(tex_frg_20, n_out22p0.xy);
	vec3 n_out20p0 = tex_frg_20_read.rgb;
	float n_out20p1 = tex_frg_20_read.a;

// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// VectorFunc:4
	vec3 n_out4p0 = vec3(1.0, 1.0, 1.0) - n_out3p0;

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// ScalarOp:18
	float n_in18p1 = 0.25000;
	float n_out18p0 = n_out5p0 - n_in18p1;

// ScalarOp:19
	float n_in19p1 = 1.77000;
	float n_out19p0 = n_out18p0 * n_in19p1;

// Scalar:16
	float n_out16p0 = 29.000000;

// ScalarOp:7
	float n_out7p0 = n_out19p0 / n_out16p0;

// Input:9
	float n_out9p0 = TIME;

// ScalarUniform:15
	float n_out15p0 = Speed;

// ScalarOp:14
	float n_out14p0 = n_out9p0 * n_out15p0;

// ScalarFunc:13
	float n_out13p0 = floor(n_out14p0);

// ScalarOp:10
	float n_out10p0 = mod(n_out13p0, n_out16p0);

// ScalarOp:12
	float n_in12p0 = 1.00000;
	float n_out12p0 = n_in12p0 / n_out16p0;

// ScalarOp:11
	float n_out11p0 = n_out10p0 * n_out12p0;

// ScalarOp:8
	float n_out8p0 = n_out7p0 + n_out11p0;

// VectorCompose:6
	vec3 n_out6p0 = vec3(n_out8p0, n_out5p1, n_out5p2);

// Texture:17
	vec4 tex_frg_17_read = texture(tex_frg_17, n_out6p0.xy);
	vec3 n_out17p0 = tex_frg_17_read.rgb;
	float n_out17p1 = tex_frg_17_read.a;

// VectorOp:21
	vec3 n_out21p0 = n_out20p0 * n_out17p0;

// TextureUniform:23
	vec3 n_out23p0;
	float n_out23p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out23p0 = n_tex_read.rgb;
		n_out23p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out21p0;
	COLOR.a = n_out23p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -317.097, -43.6935 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 720, 100 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -1920, 180 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -1620, 180 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -1280, 180 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -140, 180 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -720, 60 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -440, 60 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( -1600, -180 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( -900, -200 )
nodes/fragment/11/node = SubResource( 9 )
nodes/fragment/11/position = Vector2( -660, -180 )
nodes/fragment/12/node = SubResource( 10 )
nodes/fragment/12/position = Vector2( -900, -80 )
nodes/fragment/13/node = SubResource( 11 )
nodes/fragment/13/position = Vector2( -1200, -180 )
nodes/fragment/14/node = SubResource( 12 )
nodes/fragment/14/position = Vector2( -1380, -200 )
nodes/fragment/15/node = SubResource( 13 )
nodes/fragment/15/position = Vector2( -1680, -80 )
nodes/fragment/16/node = SubResource( 17 )
nodes/fragment/16/position = Vector2( -1240, -40 )
nodes/fragment/17/node = SubResource( 19 )
nodes/fragment/17/position = Vector2( 160, 120 )
nodes/fragment/18/node = SubResource( 20 )
nodes/fragment/18/position = Vector2( -1020, 340 )
nodes/fragment/19/node = SubResource( 21 )
nodes/fragment/19/position = Vector2( -840, 340 )
nodes/fragment/20/node = SubResource( 22 )
nodes/fragment/20/position = Vector2( 120, -120 )
nodes/fragment/21/node = SubResource( 23 )
nodes/fragment/21/position = Vector2( 397.708, 74.3241 )
nodes/fragment/22/node = SubResource( 24 )
nodes/fragment/22/position = Vector2( -140, -60 )
nodes/fragment/23/node = SubResource( 25 )
nodes/fragment/23/position = Vector2( 380, 220 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 5, 1, 6, 1, 5, 2, 6, 2, 7, 0, 8, 0, 12, 0, 11, 1, 11, 0, 8, 1, 10, 0, 11, 0, 13, 0, 10, 0, 9, 0, 14, 0, 14, 0, 13, 0, 15, 0, 14, 1, 16, 0, 12, 1, 16, 0, 10, 1, 16, 0, 7, 1, 6, 0, 17, 0, 8, 0, 6, 0, 18, 0, 19, 0, 5, 0, 18, 0, 19, 0, 7, 0, 20, 0, 21, 0, 17, 0, 21, 1, 21, 0, 0, 0, 22, 0, 20, 0, 23, 1, 0, 1 )

[resource]
shader = SubResource( 18 )
shader_param/Speed = 4.0
