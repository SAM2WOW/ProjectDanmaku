[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 bg_color: hint_color;
uniform float circle_size = 1.0;

float rand(vec2 st) {
    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);
}

void fragment() {
	vec2 uv = UV - 0.5;
	uv.x *= 1.0;
	float d = length(uv);
	float rad = circle_size;
	float c = 0.0;
	if (d<rad){
		float size = 1.0;
		float prob = 0.89;
		vec2 pos = floor(1.0 / size * FRAGCOORD.xy);
		float color = 0.0;
		float starValue = rand(pos);
		
		if ((rand(SCREEN_UV.xy / 20.0) > 0.996) && (starValue > prob))
		{
			float r = rand(SCREEN_UV.xy);
			color = r * (0.85 * sin(TIME * (r * 5.0) + 720.0 * r) + 0.95);
		}
		COLOR = vec4(vec3(color),1.0) + bg_color;
	}
	else{
		COLOR = vec4(vec3(c),0);
	}
}"

[resource]
shader = SubResource( 1 )
shader_param/bg_color = Color( 0, 0, 0, 1 )
shader_param/circle_size = 1.0
