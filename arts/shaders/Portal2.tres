[gd_resource type="ShaderMaterial" load_steps=10 format=2]

[ext_resource path="res://arts/3D/moon_clouds_sky.jpg" type="Texture" id=1]
[ext_resource path="res://arts/particles/whitecircle.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeVectorDecompose" id=16]

[sub_resource type="VisualShaderNodeVectorCompose" id=17]

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
function = 31

[sub_resource type="VisualShader" id=4]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_2;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out3p0.x;
	float n_out6p1 = n_out3p0.y;
	float n_out6p2 = n_out3p0.z;

// ScalarFunc:8
	float n_out8p0 = 1.0 - n_out6p1;

// VectorCompose:7
	float n_in7p2 = 0.00000;
	vec3 n_out7p0 = vec3(n_out6p0, n_out8p0, n_in7p2);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out7p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture(TextureUniform, UV.xy);
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -800.915, 157.9 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 80, 40 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -840, 140 )
nodes/fragment/5/node = SubResource( 15 )
nodes/fragment/5/position = Vector2( -129.993, 344.429 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( -620, 140 )
nodes/fragment/7/node = SubResource( 17 )
nodes/fragment/7/position = Vector2( -180, 140 )
nodes/fragment/8/node = SubResource( 18 )
nodes/fragment/8/position = Vector2( -374.915, 205.9 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 5, 1, 0, 1, 3, 0, 6, 0, 7, 0, 2, 0, 6, 0, 7, 0, 6, 1, 8, 0, 8, 0, 7, 1 )

[resource]
shader = SubResource( 4 )
shader_param/TextureUniform = ExtResource( 2 )
